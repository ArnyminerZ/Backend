version: '3.7'

services:
  api:
    build: .
    container_name: mic_api
    restart: "no"
    networks:
      - backend
    depends_on:
      - db
      - radicale
      - firefly
    environment:
      # Pass secrets
      - PRIVATE_KEY_FILE=/run/secrets/private_key
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - FIREFLY_TOKEN_FILE=/run/secrets/firefly_token
      - KEYS_FILE=/usr/src/app/keys
      # Some variables for wait-for-firefly.sh
      - FIREFLY_HOST=firefly
      - FIREFLY_PORT=8080
      # Some variables for wait-for-radicale.sh
      - CALDAV_HOSTNAME=radicale
      - CALDAV_PORT=5232
      # Enable props when necessary
      # - PROPS=migration
      - PROPS
    ports:
      - '3000:3000'
    secrets:
      - db_password
      - db_root_password
      - private_key
      - firefly_token
    volumes:
      - server-keys:/usr/src/app/keys

  db:
    image: linuxserver/mariadb
    container_name: mic_database
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Madrid

      - FILE__MYSQL_DATABASE=/run/secrets/db_database
      - FILE__MYSQL_USER=/run/secrets/db_username
      - FILE__MYSQL_PASSWORD=/run/secrets/db_password
      - FILE__MYSQL_ROOT_PASSWORD=/run/secrets/db_root_password
    secrets:
      - db_database
      - db_username
      - db_password
      - db_root_password
    volumes:
      - database:/config
    networks:
      - backend

  radicale:
    image: tomsquest/docker-radicale
    container_name: mic_radicale
    restart: unless-stopped
    ports:
      - "5232:5232"
    networks:
      - backend
    healthcheck:
      test: curl -f http://localhost:5232 || exit 1
      interval: 30s
      retries: 3
    volumes:
      - ./.docker/radicale:/data
      - ./radicale-config:/config:ro

  firefly:
    image: fireflyiii/core:version-5.7.18
    container_name: mic_firefly
    restart: unless-stopped
    depends_on:
      - db
      - cache
    links:
      - db
      - cache
    networks:
      - backend
    env_file: firefly.env
    environment:
      - APP_KEY_FILE=/run/secrets/firefly_app_key
      # Database Configuration
      - DB_HOST=db
      - DB_DATABASE_FILE=/run/secrets/db_database
      - DB_USERNAME_FILE=/run/secrets/db_username
      - DB_PASSWORD_FILE=/run/secrets/db_password
      # Redis Cache
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_USERNAME=
      - REDIS_PASSWORD=SRGjFe44zo4UaTqFm7UcZ6pcqeRG9PRw
    ports:
      - "8080:8080"
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    secrets:
      - firefly_app_key
      - db_database
      - db_username
      - db_password
  cache:
    image: redis:6.2-alpine
    container_name: mic_cache
    restart: unless-stopped
    networks:
      - backend
    command: redis-server --save 20 1 --loglevel warning --requirepass SRGjFe44zo4UaTqFm7UcZ6pcqeRG9PRw
    volumes:
      - cache:/data

networks:
  backend:
    driver: bridge

volumes:
  database:
  server-keys:
    driver: local
  firefly_iii_upload:
  cache:
    driver: local

secrets:
  db_username:
    file: ./secrets/username.txt
  db_password:
    file: ./secrets/password.txt
  db_root_password:
    file: ./secrets/root-password.txt
  db_database:
    file: ./secrets/database.txt
  private_key:
    file: ./secrets/private.key
  firefly_app_key:
    file: ./secrets/firefly-app-key.txt
  firefly_token:
    file: ./secrets/firefly-token.txt
