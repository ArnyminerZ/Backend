name: "Test"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x, 17.x, 18.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Install Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install mocha
        run: npm install -g mocha
      - name: Install dependencies
        run: npm install
      - name: Generate new private key
        run: |
          mkdir -p ./secrets
          openssl rand -base64 756 > ./secrets/private.key
      - name: Requirements
        run: |
          # Create the required directories
          mkdir -p secrets
          
          echo "unsafe-password" > secrets/password.txt
          echo "unsafer-password" > secrets/root-password.txt
          
          # Generate the server's private key.
          openssl rand -base64 756 > ./secrets/private.key
          
          # Create Radicale user
          sudo addgroup --gid 2999 radicale
          sudo adduser --gid 2999 --uid 2999 --shell /bin/false --disabled-password --no-create-home radicale
      - name: Prepare environment
        run: |
          echo 'DB_USERNAME=github' >> .test.env
          echo 'DB_DATABASE=Github' >> .test.env
          echo 'CALDAV_USERNAME=' >> .test.env
          echo 'CALDAV_PASSWORD=' >> .test.env
          echo 'CALDAV_AB_UUID=' >> .test.env
          echo 'PROPS=testing' >> .test.env
      - name: Tests
        run: DEBUG=testcontainers:containers npm test
        env:
          PROPS: testing
      - name: Run Report
        run: npm run ci
        env:
          PROPS: testing
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Mocha Tests           # Name of the check run which will be created
          path: test-*.json     # Path to test results
          reporter: mocha-json        # Format of test results
